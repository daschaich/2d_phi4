This README file includes some basic information about compiling, running, and testing these phi^4 simulation programs.

CONTENTS
    --Compilation instructions
    --Usage
    --A brief sketch of the phase spaces


COMPILATION INSTRUCTIONS
The various algorithms are described in the report included in this directory.

To compile the code using the fast algorithm, simply use "make".
To compile the simple but slower version, use "make simple".
To compile the version that weights the functions by path multiplicity, use "make weighted".
To compile the version with the FFT, use "make FFT".
To compile the four-dimensional version (simple algorithm), use "make 4d".


USAGE
All versions of the program take five command line parameters: \mu_0 and \lambda from the \phi^4 Lagrangian shown in the report; the length of one side of the lattice, which is constrained to be square (in two dimensions) or hypercubic (in four); the number of iterations to perform to initialize the lattice; and the number of iterations with measurements to perform.

The programs print all output on a single comma-separated line.  While this is not the most convenient form for human reading, we generally pipe the output of several runs with different parameters to a file that can be loaded into a table in Mathematica or other analysis programs for easy manipulation.


A BRIEF SKETCH OF THE PHASE SPACES
We typically mapped the mu_0-lambda phase space by varying mu_0 for fixed lambda.  Listed below are the rough mu_0 around which phase transitions occur for various lambda.  The transitions are broader for smaller lattices and sharper for larger ones.  In all cases, the symmetric (disorded) phase can be studied by increasing mu_0, and the broken (ordered) phase by decreasing mu_0.

In 1+1 dimensions,
    for lambda = 1.0, mu_0 ~ -1.27
    for lambda = .70, mu_0 ~ -0.95
    for lambda = .50, mu_0 ~ -0.72
    for lambda = .25, mu_0 ~ -0.40
    for lambda = .10, mu_0 ~ -0.18
    for lambda = .05, mu_0 ~ -0.10
    for lambda = .03, mu_0 ~ -0.06
    for lambda = .02, mu_0 ~ -0.04
    for lambda = .01, mu_0 ~ -0.02

In 3+1 dimensions,
    for lambda = 1.0, mu_0 ~ -0.44
    for lambda = .70, mu_0 ~ -0.31
    for lambda = .50, mu_0 ~ -0.22
    for lambda = .25, mu_0 ~ -0.11
    for lambda = .10, mu_0 ~ -0.04
    for lambda = .05, mu_0 ~ -0.02
    for lambda = .03, mu_0 ~ -0.01
    for lambda = .02, mu_0 ~ -0.008
    for lambda = .01, mu_0 ~ -0.005
